/*
 * api.creativehub.io
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.33
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FilterPredicateOperator', 'model/IFilterDescriptor'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FilterPredicateOperator'), require('./IFilterDescriptor'));
  } else {
    // Browser globals (root is window)
    if (!root.Apicreativehubio) {
      root.Apicreativehubio = {};
    }
    root.Apicreativehubio.PredicateFilterDescriptor = factory(root.Apicreativehubio.ApiClient, root.Apicreativehubio.FilterPredicateOperator, root.Apicreativehubio.IFilterDescriptor);
  }
}(this, function(ApiClient, FilterPredicateOperator, IFilterDescriptor) {
  'use strict';

  /**
   * The PredicateFilterDescriptor model module.
   * @module model/PredicateFilterDescriptor
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>PredicateFilterDescriptor</code>.
   * @alias module:model/PredicateFilterDescriptor
   * @class
   * @extends module:model/IFilterDescriptor
   * @param predicateOperator {module:model/FilterPredicateOperator} 
   */
  var exports = function(predicateOperator) {
    IFilterDescriptor.call(this);
    this.predicateOperator = predicateOperator;
  };

  /**
   * Constructs a <code>PredicateFilterDescriptor</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PredicateFilterDescriptor} obj Optional instance to populate.
   * @return {module:model/PredicateFilterDescriptor} The populated <code>PredicateFilterDescriptor</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      IFilterDescriptor.constructFromObject(data, obj);
      if (data.hasOwnProperty('Member'))
        obj.member = ApiClient.convertToType(data['Member'], 'String');
      if (data.hasOwnProperty('PredicateOperator'))
        obj.predicateOperator = FilterPredicateOperator.constructFromObject(data['PredicateOperator']);
      if (data.hasOwnProperty('Value'))
        obj.value = ApiClient.convertToType(data['Value'], Object);
      if (data.hasOwnProperty('ValueKendo'))
        obj.valueKendo = ApiClient.convertToType(data['ValueKendo'], 'String');
    }
    return obj;
  }

  exports.prototype = Object.create(IFilterDescriptor.prototype);
  exports.prototype.constructor = exports;
  /**
   * @member {String} member
   */
  exports.prototype.member = undefined;

  /**
   * @member {module:model/FilterPredicateOperator} predicateOperator
   */
  exports.prototype.predicateOperator = undefined;

  /**
   * @member {Object} value
   */
  exports.prototype.value = undefined;

  /**
   * @member {String} valueKendo
   */
  exports.prototype.valueKendo = undefined;


  return exports;

}));
