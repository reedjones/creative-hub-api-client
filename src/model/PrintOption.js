/*
 * api.creativehub.io
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.33
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal'));
  } else {
    // Browser globals (root is window)
    if (!root.Apicreativehubio) {
      root.Apicreativehubio = {};
    }
    root.Apicreativehubio.PrintOption = factory(root.Apicreativehubio.ApiClient, root.Apicreativehubio.ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal);
  }
}(this, function(ApiClient, ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal) {
  'use strict';

  /**
   * The PrintOption model module.
   * @module model/PrintOption
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>PrintOption</code>.
   * @alias module:model/PrintOption
   * @class
   * @param id {Number} 
   * @param price {Number} 
   * @param costPerItem {Number} 
   * @param shortSideInches {Number} 
   * @param longSideInches {Number} 
   * @param shortSideMM {Number} 
   * @param longSideMM {Number} 
   * @param borderTopMM {Number} 
   * @param borderLeftMM {Number} 
   * @param borderRightMM {Number} 
   * @param borderBottomMM {Number} 
   * @param wMBorderTopMM {Number} 
   * @param wMBorderLeftMM {Number} 
   * @param wMBorderRightMM {Number} 
   * @param wMBorderBottomMM {Number} 
   * @param isAvailable {Boolean} 
   * @param sellAsEdition {Boolean} 
   * @param hasFrame {Boolean} 
   * @param hasCanvas {Boolean} 
   * @param frameWidthMM {Number} 
   * @param widthMM {Number} 
   * @param heightMM {Number} 
   * @param verticalBorderMM {Number} 
   * @param horizontalBorderMM {Number} 
   * @param longBorderMM {Number} 
   * @param shortBorderMM {Number} 
   * @param verticalWMBorderMM {Number} 
   * @param horizontalWMBorderMM {Number} 
   * @param longMountMM {Number} 
   * @param shortMountMM {Number} 
   * @param totalWidthMM {Number} 
   * @param totalHeightMM {Number} 
   * @param totalLongSideMM {Number} 
   * @param totalShortSideMM {Number} 
   * @param totalLongSideInches {Number} 
   * @param totalShortSideInches {Number} 
   * @param dimensions {module:model/ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal} 
   */
  var exports = function(id, price, costPerItem, shortSideInches, longSideInches, shortSideMM, longSideMM, borderTopMM, borderLeftMM, borderRightMM, borderBottomMM, wMBorderTopMM, wMBorderLeftMM, wMBorderRightMM, wMBorderBottomMM, isAvailable, sellAsEdition, hasFrame, hasCanvas, frameWidthMM, widthMM, heightMM, verticalBorderMM, horizontalBorderMM, longBorderMM, shortBorderMM, verticalWMBorderMM, horizontalWMBorderMM, longMountMM, shortMountMM, totalWidthMM, totalHeightMM, totalLongSideMM, totalShortSideMM, totalLongSideInches, totalShortSideInches, dimensions) {
    this.id = id;
    this.price = price;
    this.costPerItem = costPerItem;
    this.shortSideInches = shortSideInches;
    this.longSideInches = longSideInches;
    this.shortSideMM = shortSideMM;
    this.longSideMM = longSideMM;
    this.borderTopMM = borderTopMM;
    this.borderLeftMM = borderLeftMM;
    this.borderRightMM = borderRightMM;
    this.borderBottomMM = borderBottomMM;
    this.wMBorderTopMM = wMBorderTopMM;
    this.wMBorderLeftMM = wMBorderLeftMM;
    this.wMBorderRightMM = wMBorderRightMM;
    this.wMBorderBottomMM = wMBorderBottomMM;
    this.isAvailable = isAvailable;
    this.sellAsEdition = sellAsEdition;
    this.hasFrame = hasFrame;
    this.hasCanvas = hasCanvas;
    this.frameWidthMM = frameWidthMM;
    this.widthMM = widthMM;
    this.heightMM = heightMM;
    this.verticalBorderMM = verticalBorderMM;
    this.horizontalBorderMM = horizontalBorderMM;
    this.longBorderMM = longBorderMM;
    this.shortBorderMM = shortBorderMM;
    this.verticalWMBorderMM = verticalWMBorderMM;
    this.horizontalWMBorderMM = horizontalWMBorderMM;
    this.longMountMM = longMountMM;
    this.shortMountMM = shortMountMM;
    this.totalWidthMM = totalWidthMM;
    this.totalHeightMM = totalHeightMM;
    this.totalLongSideMM = totalLongSideMM;
    this.totalShortSideMM = totalShortSideMM;
    this.totalLongSideInches = totalLongSideInches;
    this.totalShortSideInches = totalShortSideInches;
    this.dimensions = dimensions;
  };

  /**
   * Constructs a <code>PrintOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PrintOption} obj Optional instance to populate.
   * @return {module:model/PrintOption} The populated <code>PrintOption</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Id'))
        obj.id = ApiClient.convertToType(data['Id'], 'Number');
      if (data.hasOwnProperty('Price'))
        obj.price = ApiClient.convertToType(data['Price'], 'Number');
      if (data.hasOwnProperty('CostPerItem'))
        obj.costPerItem = ApiClient.convertToType(data['CostPerItem'], 'Number');
      if (data.hasOwnProperty('ShortSideInches'))
        obj.shortSideInches = ApiClient.convertToType(data['ShortSideInches'], 'Number');
      if (data.hasOwnProperty('LongSideInches'))
        obj.longSideInches = ApiClient.convertToType(data['LongSideInches'], 'Number');
      if (data.hasOwnProperty('ShortSideMM'))
        obj.shortSideMM = ApiClient.convertToType(data['ShortSideMM'], 'Number');
      if (data.hasOwnProperty('LongSideMM'))
        obj.longSideMM = ApiClient.convertToType(data['LongSideMM'], 'Number');
      if (data.hasOwnProperty('BorderTopMM'))
        obj.borderTopMM = ApiClient.convertToType(data['BorderTopMM'], 'Number');
      if (data.hasOwnProperty('BorderLeftMM'))
        obj.borderLeftMM = ApiClient.convertToType(data['BorderLeftMM'], 'Number');
      if (data.hasOwnProperty('BorderRightMM'))
        obj.borderRightMM = ApiClient.convertToType(data['BorderRightMM'], 'Number');
      if (data.hasOwnProperty('BorderBottomMM'))
        obj.borderBottomMM = ApiClient.convertToType(data['BorderBottomMM'], 'Number');
      if (data.hasOwnProperty('WMBorderTopMM'))
        obj.wMBorderTopMM = ApiClient.convertToType(data['WMBorderTopMM'], 'Number');
      if (data.hasOwnProperty('WMBorderLeftMM'))
        obj.wMBorderLeftMM = ApiClient.convertToType(data['WMBorderLeftMM'], 'Number');
      if (data.hasOwnProperty('WMBorderRightMM'))
        obj.wMBorderRightMM = ApiClient.convertToType(data['WMBorderRightMM'], 'Number');
      if (data.hasOwnProperty('WMBorderBottomMM'))
        obj.wMBorderBottomMM = ApiClient.convertToType(data['WMBorderBottomMM'], 'Number');
      if (data.hasOwnProperty('WMColour'))
        obj.wMColour = ApiClient.convertToType(data['WMColour'], 'String');
      if (data.hasOwnProperty('IsAvailable'))
        obj.isAvailable = ApiClient.convertToType(data['IsAvailable'], 'Boolean');
      if (data.hasOwnProperty('SellAsEdition'))
        obj.sellAsEdition = ApiClient.convertToType(data['SellAsEdition'], 'Boolean');
      if (data.hasOwnProperty('EditionsLimit'))
        obj.editionsLimit = ApiClient.convertToType(data['EditionsLimit'], 'Number');
      if (data.hasOwnProperty('LastUpdated'))
        obj.lastUpdated = ApiClient.convertToType(data['LastUpdated'], 'Date');
      if (data.hasOwnProperty('HasFrame'))
        obj.hasFrame = ApiClient.convertToType(data['HasFrame'], 'Boolean');
      if (data.hasOwnProperty('HasCanvas'))
        obj.hasCanvas = ApiClient.convertToType(data['HasCanvas'], 'Boolean');
      if (data.hasOwnProperty('FrameDescription'))
        obj.frameDescription = ApiClient.convertToType(data['FrameDescription'], 'String');
      if (data.hasOwnProperty('FrameWidthMM'))
        obj.frameWidthMM = ApiClient.convertToType(data['FrameWidthMM'], 'Number');
      if (data.hasOwnProperty('WidthMM'))
        obj.widthMM = ApiClient.convertToType(data['WidthMM'], 'Number');
      if (data.hasOwnProperty('HeightMM'))
        obj.heightMM = ApiClient.convertToType(data['HeightMM'], 'Number');
      if (data.hasOwnProperty('EditionsSold'))
        obj.editionsSold = ApiClient.convertToType(data['EditionsSold'], 'Number');
      if (data.hasOwnProperty('CurrencyCode'))
        obj.currencyCode = ApiClient.convertToType(data['CurrencyCode'], 'String');
      if (data.hasOwnProperty('PreviewFileNameStandard'))
        obj.previewFileNameStandard = ApiClient.convertToType(data['PreviewFileNameStandard'], 'String');
      if (data.hasOwnProperty('PreviewFileNameCloseUp'))
        obj.previewFileNameCloseUp = ApiClient.convertToType(data['PreviewFileNameCloseUp'], 'String');
      if (data.hasOwnProperty('VerticalBorderMM'))
        obj.verticalBorderMM = ApiClient.convertToType(data['VerticalBorderMM'], 'Number');
      if (data.hasOwnProperty('HorizontalBorderMM'))
        obj.horizontalBorderMM = ApiClient.convertToType(data['HorizontalBorderMM'], 'Number');
      if (data.hasOwnProperty('LongBorderMM'))
        obj.longBorderMM = ApiClient.convertToType(data['LongBorderMM'], 'Number');
      if (data.hasOwnProperty('ShortBorderMM'))
        obj.shortBorderMM = ApiClient.convertToType(data['ShortBorderMM'], 'Number');
      if (data.hasOwnProperty('VerticalWMBorderMM'))
        obj.verticalWMBorderMM = ApiClient.convertToType(data['VerticalWMBorderMM'], 'Number');
      if (data.hasOwnProperty('HorizontalWMBorderMM'))
        obj.horizontalWMBorderMM = ApiClient.convertToType(data['HorizontalWMBorderMM'], 'Number');
      if (data.hasOwnProperty('LongMountMM'))
        obj.longMountMM = ApiClient.convertToType(data['LongMountMM'], 'Number');
      if (data.hasOwnProperty('ShortMountMM'))
        obj.shortMountMM = ApiClient.convertToType(data['ShortMountMM'], 'Number');
      if (data.hasOwnProperty('TotalWidthMM'))
        obj.totalWidthMM = ApiClient.convertToType(data['TotalWidthMM'], 'Number');
      if (data.hasOwnProperty('TotalHeightMM'))
        obj.totalHeightMM = ApiClient.convertToType(data['TotalHeightMM'], 'Number');
      if (data.hasOwnProperty('TotalLongSideMM'))
        obj.totalLongSideMM = ApiClient.convertToType(data['TotalLongSideMM'], 'Number');
      if (data.hasOwnProperty('TotalShortSideMM'))
        obj.totalShortSideMM = ApiClient.convertToType(data['TotalShortSideMM'], 'Number');
      if (data.hasOwnProperty('TotalLongSideInches'))
        obj.totalLongSideInches = ApiClient.convertToType(data['TotalLongSideInches'], 'Number');
      if (data.hasOwnProperty('TotalShortSideInches'))
        obj.totalShortSideInches = ApiClient.convertToType(data['TotalShortSideInches'], 'Number');
      if (data.hasOwnProperty('Description'))
        obj.description = ApiClient.convertToType(data['Description'], 'String');
      if (data.hasOwnProperty('ShortDescription'))
        obj.shortDescription = ApiClient.convertToType(data['ShortDescription'], 'String');
      if (data.hasOwnProperty('FullDescription'))
        obj.fullDescription = ApiClient.convertToType(data['FullDescription'], 'String');
      if (data.hasOwnProperty('VariantDescription'))
        obj.variantDescription = ApiClient.convertToType(data['VariantDescription'], 'String');
      if (data.hasOwnProperty('Dimensions'))
        obj.dimensions = ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal.constructFromObject(data['Dimensions']);
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {Number} price
   */
  exports.prototype.price = undefined;

  /**
   * @member {Number} costPerItem
   */
  exports.prototype.costPerItem = undefined;

  /**
   * @member {Number} shortSideInches
   */
  exports.prototype.shortSideInches = undefined;

  /**
   * @member {Number} longSideInches
   */
  exports.prototype.longSideInches = undefined;

  /**
   * @member {Number} shortSideMM
   */
  exports.prototype.shortSideMM = undefined;

  /**
   * @member {Number} longSideMM
   */
  exports.prototype.longSideMM = undefined;

  /**
   * @member {Number} borderTopMM
   */
  exports.prototype.borderTopMM = undefined;

  /**
   * @member {Number} borderLeftMM
   */
  exports.prototype.borderLeftMM = undefined;

  /**
   * @member {Number} borderRightMM
   */
  exports.prototype.borderRightMM = undefined;

  /**
   * @member {Number} borderBottomMM
   */
  exports.prototype.borderBottomMM = undefined;

  /**
   * @member {Number} wMBorderTopMM
   */
  exports.prototype.wMBorderTopMM = undefined;

  /**
   * @member {Number} wMBorderLeftMM
   */
  exports.prototype.wMBorderLeftMM = undefined;

  /**
   * @member {Number} wMBorderRightMM
   */
  exports.prototype.wMBorderRightMM = undefined;

  /**
   * @member {Number} wMBorderBottomMM
   */
  exports.prototype.wMBorderBottomMM = undefined;

  /**
   * @member {String} wMColour
   */
  exports.prototype.wMColour = undefined;

  /**
   * @member {Boolean} isAvailable
   */
  exports.prototype.isAvailable = undefined;

  /**
   * @member {Boolean} sellAsEdition
   */
  exports.prototype.sellAsEdition = undefined;

  /**
   * @member {Number} editionsLimit
   */
  exports.prototype.editionsLimit = undefined;

  /**
   * @member {Date} lastUpdated
   */
  exports.prototype.lastUpdated = undefined;

  /**
   * @member {Boolean} hasFrame
   */
  exports.prototype.hasFrame = undefined;

  /**
   * @member {Boolean} hasCanvas
   */
  exports.prototype.hasCanvas = undefined;

  /**
   * @member {String} frameDescription
   */
  exports.prototype.frameDescription = undefined;

  /**
   * @member {Number} frameWidthMM
   */
  exports.prototype.frameWidthMM = undefined;

  /**
   * @member {Number} widthMM
   */
  exports.prototype.widthMM = undefined;

  /**
   * @member {Number} heightMM
   */
  exports.prototype.heightMM = undefined;

  /**
   * @member {Number} editionsSold
   */
  exports.prototype.editionsSold = undefined;

  /**
   * @member {String} currencyCode
   */
  exports.prototype.currencyCode = undefined;

  /**
   * @member {String} previewFileNameStandard
   */
  exports.prototype.previewFileNameStandard = undefined;

  /**
   * @member {String} previewFileNameCloseUp
   */
  exports.prototype.previewFileNameCloseUp = undefined;

  /**
   * @member {Number} verticalBorderMM
   */
  exports.prototype.verticalBorderMM = undefined;

  /**
   * @member {Number} horizontalBorderMM
   */
  exports.prototype.horizontalBorderMM = undefined;

  /**
   * @member {Number} longBorderMM
   */
  exports.prototype.longBorderMM = undefined;

  /**
   * @member {Number} shortBorderMM
   */
  exports.prototype.shortBorderMM = undefined;

  /**
   * @member {Number} verticalWMBorderMM
   */
  exports.prototype.verticalWMBorderMM = undefined;

  /**
   * @member {Number} horizontalWMBorderMM
   */
  exports.prototype.horizontalWMBorderMM = undefined;

  /**
   * @member {Number} longMountMM
   */
  exports.prototype.longMountMM = undefined;

  /**
   * @member {Number} shortMountMM
   */
  exports.prototype.shortMountMM = undefined;

  /**
   * @member {Number} totalWidthMM
   */
  exports.prototype.totalWidthMM = undefined;

  /**
   * @member {Number} totalHeightMM
   */
  exports.prototype.totalHeightMM = undefined;

  /**
   * @member {Number} totalLongSideMM
   */
  exports.prototype.totalLongSideMM = undefined;

  /**
   * @member {Number} totalShortSideMM
   */
  exports.prototype.totalShortSideMM = undefined;

  /**
   * @member {Number} totalLongSideInches
   */
  exports.prototype.totalLongSideInches = undefined;

  /**
   * @member {Number} totalShortSideInches
   */
  exports.prototype.totalShortSideInches = undefined;

  /**
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * @member {String} shortDescription
   */
  exports.prototype.shortDescription = undefined;

  /**
   * @member {String} fullDescription
   */
  exports.prototype.fullDescription = undefined;

  /**
   * @member {String} variantDescription
   */
  exports.prototype.variantDescription = undefined;

  /**
   * @member {module:model/ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal} dimensions
   */
  exports.prototype.dimensions = undefined;


  return exports;

}));
