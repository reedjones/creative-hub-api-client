/*
 * api.creativehub.io
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.33
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Apicreativehubio) {
      root.Apicreativehubio = {};
    }
    root.Apicreativehubio.ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal = factory(root.Apicreativehubio.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal model module.
   * @module model/ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal</code>.
   * @alias module:model/ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal
   * @class
   * @param item1 {Number} 
   * @param item2 {Number} 
   * @param item3 {Number} 
   * @param item4 {Number} 
   */
  var exports = function(item1, item2, item3, item4) {
    this.item1 = item1;
    this.item2 = item2;
    this.item3 = item3;
    this.item4 = item4;
  };

  /**
   * Constructs a <code>ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal} obj Optional instance to populate.
   * @return {module:model/ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal} The populated <code>ValueTupleOfDecimalAndDecimalAndDecimalAndDecimal</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Item1'))
        obj.item1 = ApiClient.convertToType(data['Item1'], 'Number');
      if (data.hasOwnProperty('Item2'))
        obj.item2 = ApiClient.convertToType(data['Item2'], 'Number');
      if (data.hasOwnProperty('Item3'))
        obj.item3 = ApiClient.convertToType(data['Item3'], 'Number');
      if (data.hasOwnProperty('Item4'))
        obj.item4 = ApiClient.convertToType(data['Item4'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} item1
   */
  exports.prototype.item1 = undefined;

  /**
   * @member {Number} item2
   */
  exports.prototype.item2 = undefined;

  /**
   * @member {Number} item3
   */
  exports.prototype.item3 = undefined;

  /**
   * @member {Number} item4
   */
  exports.prototype.item4 = undefined;


  return exports;

}));
