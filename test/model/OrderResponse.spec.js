/*
 * api.creativehub.io
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.33
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apicreativehubio);
  }
}(this, function(expect, Apicreativehubio) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('OrderResponse', function() {
      beforeEach(function() {
        instance = new Apicreativehubio.OrderResponse();
      });

      it('should create an instance of OrderResponse', function() {
        // TODO: update the code to test OrderResponse
        expect(instance).to.be.a(Apicreativehubio.OrderResponse);
      });

      it('should have the property orderItems (base name: "OrderItems")', function() {
        // TODO: update the code to test the property orderItems
        expect(instance).to.have.property('orderItems');
        // expect(instance.orderItems).to.be(expectedValueLiteral);
      });

      it('should have the property orderState (base name: "OrderState")', function() {
        // TODO: update the code to test the property orderState
        expect(instance).to.have.property('orderState');
        // expect(instance.orderState).to.be(expectedValueLiteral);
      });

      it('should have the property dateCreated (base name: "DateCreated")', function() {
        // TODO: update the code to test the property dateCreated
        expect(instance).to.have.property('dateCreated');
        // expect(instance.dateCreated).to.be(expectedValueLiteral);
      });

      it('should have the property dateLastEdited (base name: "DateLastEdited")', function() {
        // TODO: update the code to test the property dateLastEdited
        expect(instance).to.have.property('dateLastEdited');
        // expect(instance.dateLastEdited).to.be(expectedValueLiteral);
      });

      it('should have the property printCostExcludingSalesTax (base name: "PrintCostExcludingSalesTax")', function() {
        // TODO: update the code to test the property printCostExcludingSalesTax
        expect(instance).to.have.property('printCostExcludingSalesTax');
        // expect(instance.printCostExcludingSalesTax).to.be(expectedValueLiteral);
      });

      it('should have the property printCostSalesTax (base name: "PrintCostSalesTax")', function() {
        // TODO: update the code to test the property printCostSalesTax
        expect(instance).to.have.property('printCostSalesTax');
        // expect(instance.printCostSalesTax).to.be(expectedValueLiteral);
      });

      it('should have the property totalExcludingSalesTax (base name: "TotalExcludingSalesTax")', function() {
        // TODO: update the code to test the property totalExcludingSalesTax
        expect(instance).to.have.property('totalExcludingSalesTax');
        // expect(instance.totalExcludingSalesTax).to.be(expectedValueLiteral);
      });

      it('should have the property totalSalesTax (base name: "TotalSalesTax")', function() {
        // TODO: update the code to test the property totalSalesTax
        expect(instance).to.have.property('totalSalesTax');
        // expect(instance.totalSalesTax).to.be(expectedValueLiteral);
      });

      it('should have the property isPaid (base name: "IsPaid")', function() {
        // TODO: update the code to test the property isPaid
        expect(instance).to.have.property('isPaid');
        // expect(instance.isPaid).to.be(expectedValueLiteral);
      });

      it('should have the property dateCreatedString (base name: "DateCreatedString")', function() {
        // TODO: update the code to test the property dateCreatedString
        expect(instance).to.have.property('dateCreatedString');
        // expect(instance.dateCreatedString).to.be(expectedValueLiteral);
      });

      it('should have the property dateLastEditedString (base name: "DateLastEditedString")', function() {
        // TODO: update the code to test the property dateLastEditedString
        expect(instance).to.have.property('dateLastEditedString');
        // expect(instance.dateLastEditedString).to.be(expectedValueLiteral);
      });

    });
  });

}));
