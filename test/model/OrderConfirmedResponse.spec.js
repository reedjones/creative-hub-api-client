/*
 * api.creativehub.io
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.33
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apicreativehubio);
  }
}(this, function(expect, Apicreativehubio) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('OrderConfirmedResponse', function() {
      beforeEach(function() {
        instance = new Apicreativehubio.OrderConfirmedResponse();
      });

      it('should create an instance of OrderConfirmedResponse', function() {
        // TODO: update the code to test OrderConfirmedResponse
        expect(instance).to.be.a(Apicreativehubio.OrderConfirmedResponse);
      });

      it('should have the property deliveryOption (base name: "DeliveryOption")', function() {
        // TODO: update the code to test the property deliveryOption
        expect(instance).to.have.property('deliveryOption');
        // expect(instance.deliveryOption).to.be(expectedValueLiteral);
      });

      it('should have the property deliveryChargeExcludingSalesTax (base name: "DeliveryChargeExcludingSalesTax")', function() {
        // TODO: update the code to test the property deliveryChargeExcludingSalesTax
        expect(instance).to.have.property('deliveryChargeExcludingSalesTax');
        // expect(instance.deliveryChargeExcludingSalesTax).to.be(expectedValueLiteral);
      });

      it('should have the property deliveryChargeSalesTax (base name: "DeliveryChargeSalesTax")', function() {
        // TODO: update the code to test the property deliveryChargeSalesTax
        expect(instance).to.have.property('deliveryChargeSalesTax');
        // expect(instance.deliveryChargeSalesTax).to.be(expectedValueLiteral);
      });

      it('should have the property dateDispatched (base name: "DateDispatched")', function() {
        // TODO: update the code to test the property dateDispatched
        expect(instance).to.have.property('dateDispatched');
        // expect(instance.dateDispatched).to.be(expectedValueLiteral);
      });

      it('should have the property trackingNumber (base name: "TrackingNumber")', function() {
        // TODO: update the code to test the property trackingNumber
        expect(instance).to.have.property('trackingNumber');
        // expect(instance.trackingNumber).to.be(expectedValueLiteral);
      });

      it('should have the property dateDispatchedString (base name: "DateDispatchedString")', function() {
        // TODO: update the code to test the property dateDispatchedString
        expect(instance).to.have.property('dateDispatchedString');
        // expect(instance.dateDispatchedString).to.be(expectedValueLiteral);
      });

    });
  });

}));
