/*
 * api.creativehub.io
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.33
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Apicreativehubio);
  }
}(this, function(expect, Apicreativehubio) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Address', function() {
      beforeEach(function() {
        instance = new Apicreativehubio.Address();
      });

      it('should create an instance of Address', function() {
        // TODO: update the code to test Address
        expect(instance).to.be.a(Apicreativehubio.Address);
      });

      it('should have the property firstName (base name: "FirstName")', function() {
        // TODO: update the code to test the property firstName
        expect(instance).to.have.property('firstName');
        // expect(instance.firstName).to.be(expectedValueLiteral);
      });

      it('should have the property lastName (base name: "LastName")', function() {
        // TODO: update the code to test the property lastName
        expect(instance).to.have.property('lastName');
        // expect(instance.lastName).to.be(expectedValueLiteral);
      });

      it('should have the property line1 (base name: "Line1")', function() {
        // TODO: update the code to test the property line1
        expect(instance).to.have.property('line1');
        // expect(instance.line1).to.be(expectedValueLiteral);
      });

      it('should have the property line2 (base name: "Line2")', function() {
        // TODO: update the code to test the property line2
        expect(instance).to.have.property('line2');
        // expect(instance.line2).to.be(expectedValueLiteral);
      });

      it('should have the property town (base name: "Town")', function() {
        // TODO: update the code to test the property town
        expect(instance).to.have.property('town');
        // expect(instance.town).to.be(expectedValueLiteral);
      });

      it('should have the property county (base name: "County")', function() {
        // TODO: update the code to test the property county
        expect(instance).to.have.property('county');
        // expect(instance.county).to.be(expectedValueLiteral);
      });

      it('should have the property postCode (base name: "PostCode")', function() {
        // TODO: update the code to test the property postCode
        expect(instance).to.have.property('postCode');
        // expect(instance.postCode).to.be(expectedValueLiteral);
      });

      it('should have the property countryId (base name: "CountryId")', function() {
        // TODO: update the code to test the property countryId
        expect(instance).to.have.property('countryId');
        // expect(instance.countryId).to.be(expectedValueLiteral);
      });

      it('should have the property countryCode (base name: "CountryCode")', function() {
        // TODO: update the code to test the property countryCode
        expect(instance).to.have.property('countryCode');
        // expect(instance.countryCode).to.be(expectedValueLiteral);
      });

      it('should have the property countryName (base name: "CountryName")', function() {
        // TODO: update the code to test the property countryName
        expect(instance).to.have.property('countryName');
        // expect(instance.countryName).to.be(expectedValueLiteral);
      });

      it('should have the property phoneNumber (base name: "PhoneNumber")', function() {
        // TODO: update the code to test the property phoneNumber
        expect(instance).to.have.property('phoneNumber');
        // expect(instance.phoneNumber).to.be(expectedValueLiteral);
      });

    });
  });

}));
